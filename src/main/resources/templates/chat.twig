{% extends "_master.twig" %}
{# using master template #}


{% block title %}Customer Chat : {{ thread_title }} {%endblock%}


{% block content %}

    <br />

    <div class="row" id="centeredContainer">

        <div id="chatPanel" class="panel panel-default text-center">
            <div class="panel-heading">
                <h1 class="panel-title">{{ thread_title }}</h1>
            </div>
            <div class="panel-body" style="text-align: left;" id="chatPanelBody">

				<form class="form-inline" role="form" id="chatFrm" onsubmit="return false">

					<div class="col-md-10">
						<input type="text" class="form-control" id="chatText" name="chatText" style="width: 99%;"  autocomplete="off" />
					</div>
					<div class="col-md-2">
						<button id="submitBtn" class="btn btn-primary" type="button">submit</button>
					</div>

				</form>

				<hr />

                <div id="messagesFld">

                </div>

            </div>
        </div>


    </div>

{% endblock %}


{% block extra_js %}

	<!-- we need sockjs and stomp libraries -->
<script src="/webjars/sockjs-client/1.1.2/sockjs.min.js"></script>
<script src="/webjars/stomp-websocket/2.3.3/stomp.min.js"></script>
<script src="/webjars/momentjs/2.17.1/min/moment.min.js"></script>
<script type="application/javascript">


	var stompClient 	= 	null;


	//conects to our websocket
	function connect() {

		var socket 	= 	new SockJS("/stomp");
		stompClient = Stomp.over(socket);
		stompClient.connect({}, function (frame) {

			//once we connect submit a request to get list of messages)
			stompClient.send(
				"/thread/{{ thread_id }}",
				{},
				JSON.stringify(
					{
						'message'	: "",
						'user_id'	: {{ user_id }}
					}
				)
			);

			stompClient.subscribe('/topic/chat', function ( serverMessage ) {

				//parse message coming from server
				var decodedMessage = jQuery.parseJSON( serverMessage.body );
				if (decodedMessage.status == "ok"){

					renderMessages( decodedMessage.payload.messages );
				}
			});
		});
	}




	//triggered when we want to send a message via websocket
	function submitChat(){

		var chatText = $("#chatText").val();

		//clear chat field
		$("#chatText").val("");

		//send a message down the websocket
		stompClient.send(
			"/thread/{{ thread_id }}",
			{},
			JSON.stringify(
				{
					'message'	: chatText,
					'user_id'	: {{ user_id }}
				}
			)
		);
	}


	function renderMessages( _messages ){

		var messages = jQuery.parseJSON( _messages );

		var html = '<table class="table table-condensed table-striped">';
		$.each( messages, function( index, value ) {

			//var dt = new Date( value.dt_created );
			var formatted = moment( value.dt_created ).format('MM/DD/YYYY hh:mm a')

			//color in support replies in a different color
			if( value.is_support == true ){

				html 	+= 	'<tr class="warning">';
			}
			else{

				html 	+= 	'<tr>';
			}

			html 	+= 	'<td class="messageTblComment">' + value.comment + '</td>';
			html 	+= 	'<td class="messageTblName"><strong>' + value.name + '</strong><br />' + formatted + '</td>';
			html 	+= 	'</tr>';
		});
		html 	+= 	'</table>';

		$('#messagesFld').empty().append( html );
	}



	//once the page completes loading
	$(document).ready(function () {

		//connect to websocket when page loads
		connect();

		$('#chatText').focus();

		//when either enter is pressed or submit button is clicked we send the chat text
		$('#chatFrm').keypress(function(e){

			var keycode = (e.keyCode ? e.keyCode : e.which);
			if(keycode == '13'){
				submitChat();
			}
		});
		$('#submitBtn').on("click", submitChat );
	});

</script>

{% endblock %}